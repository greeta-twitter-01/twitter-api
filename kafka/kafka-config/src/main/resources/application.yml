kafka-config:
  bootstrap-servers: broker:29092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://schema-registry:8081
  topic-name: twitter-topic
  topic-names-to-create:
    - twitter-topic
    - twitter-analytics-topic
  num-of-partitions: 1
  replication-factor: 1

kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.LongSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  compression-type: snappy
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5

kafka-consumer-config:
  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
  consumer-group-id: twitter-topic-consumer
  auto-offset-reset: earliest
  specific-avro-reader-key: specific.avro.reader
  specific-avro-reader: true
  batch-listener: true
  auto-startup: false
  concurrency-level: 3
  session-timeout-ms: 10000
  heartbeat-interval-ms: 3000
  max-poll-interval-ms: 300000
  max-poll-records: 500
  max-partition-fetch-bytes-default: 1048576
  max-partition-fetch-bytes-boost-factor: 1
  poll-timeout-ms: 150


kafka-streams-config:
  application-id: kafka-streams-application
  input-topic-name: twitter-topic
  output-topic-name: twitter-analytics-topic
  state-file-location: ${HOME}/kafka-streaming-state
  word-count-store-name: word-count-store